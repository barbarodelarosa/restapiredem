# Generated by Django 3.2.3 on 2021-06-07 06:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import usuario.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('tipo_usuario', models.IntegerField(blank=True, choices=[(1, 'ADMIN'), (2, 'EMPRENDEDOR'), (3, 'USER')], default=1, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=usuario.models.path_to_avatar)),
                ('edad', models.DateField(auto_now_add=True, null=True)),
                ('genero', models.CharField(choices=[('', ''), ('M', 'Masculino'), ('F', 'Femenino')], default='', max_length=10)),
                ('compartido', models.IntegerField(default=0)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('actualizado', models.DateTimeField(auto_now=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('movil', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('correo', models.EmailField(blank=True, max_length=30, null=True, unique=True)),
                ('sitio_web', models.URLField(blank=True, max_length=30, null=True, unique=True)),
                ('facebook', models.URLField(blank=True, max_length=30, null=True, unique=True)),
                ('instagram', models.URLField(blank=True, max_length=30, null=True, unique=True)),
                ('whatsapp', models.URLField(blank=True, max_length=30, null=True, unique=True)),
                ('telegram', models.URLField(blank=True, max_length=30, null=True, unique=True)),
                ('pais', models.CharField(default='Cuba', max_length=25)),
                ('provincia', models.CharField(blank=True, max_length=25, null=True)),
                ('municipio', models.CharField(blank=True, max_length=25, null=True)),
                ('localidad', models.CharField(blank=True, max_length=25, null=True)),
                ('calle', models.CharField(blank=True, max_length=25, null=True)),
                ('coordenadas', models.CharField(blank=True, max_length=60, null=True)),
                ('amigos', models.ManyToManyField(blank=True, related_name='_usuario_user_amigos_+', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('seguidores', models.ManyToManyField(blank=True, related_name='_usuario_user_seguidores_+', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
